on: push
    
jobs:
    backup:
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        steps:
        - uses: actions/checkout@main
        - run: |
              git fetch --unshallow
              echo '${{secrets.KEY}}' > key
              chmod 400 key
              git -c core.sshCommand='ssh -i key -o StrictHostKeyChecking=no' push -f git@bitbucket.org:chaowenguo/${GITHUB_REPOSITORY#*/}
    build:
        runs-on: ubuntu-latest
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-python@main
          with:
              python-version: 3.x
        - run: |
              docker login -u chaowenguo -p ${{secrets.DOCKER}}
              docker build -t chaowenguo/postgres .
              docker push chaowenguo/postgres
              #wget https://download.oracle.com/otn_software/linux/instantclient/213000/oracle-instantclient-basic-21.3.0.0.0-1.el8.x86_64.rpm https://download.oracle.com/otn_software/linux/instantclient/213000/oracle-instantclient-sqlplus-21.3.0.0.0-1.el8.x86_64.rpm https://download.oracle.com/otn_software/linux/instantclient/213000/oracle-instantclient-devel-21.3.0.0.0-1.el8.x86_64.rpm
              #sudo apt update
              #sudo apt install -y --no-install-recommends alien
              #sudo alien -i *.x86_64.rpm
              #export ORACLE_HOME=/usr/lib/oracle/21/client64
              #export LD_LIBRARY_PATH=$ORACLE_HOME/lib/$LD_LIBRARY_PATH
              #pip install aiohttp asyncpg asyncmy oci cx_Oracle
              #echo '${{secrets.OCI}}' > oci.key
              #python build.py ${{secrets.CLIENTID}} ${{secrets.CLIENTSECRET}} ${{secrets.TENANTID}}
    databaseConnect:
        runs-on: ubuntu-latest
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/checkout@main
        - run: |
              mkdir certs
              curl https://${{secrets.GITHUB}}@raw.githubusercontent.com/chaowenGUO/server/main/certs/ca.crt > certs/ca.crt
              curl https://${{secrets.GITHUB}}@raw.githubusercontent.com/chaowenGUO/server/main/certs/client.root.crt > certs/client.root.crt
              curl https://${{secrets.GITHUB}}@raw.githubusercontent.com/chaowenGUO/server/main/certs/client.root.key > certs/client.root.key
              curl https://binaries.cockroachdb.com/cockroach-v21.2.7.linux-amd64.tgz | tar -xz
              sudo cp cockroach*/cockroach /usr/local/bin
              sudo cp -r cockroach*/lib /usr/local
              chmod 400 certs/client.root.key
              cockroach init --certs-dir certs --host 40.118.245.62
              cockroach sql --certs-dir certs --host 40.118.245.62 -d defaultdb -f database.sql
              sudo apt update
              sudo apt install -y --no-install-recommends redis-tools
              redis-cli --cluster create 40.118.245.62:6379 20.112.94.147:6379 152.67.226.235:6379 --cluster-yes -a ${{secrets.PASSWORD}}
              #https://www.cockroachlabs.com/docs/stable/deploy-cockroachdb-on-premises.html#step-9-scale-the-cluster
              #Redis cluster tutorial add new node
    clean:
        runs-on: ubuntu-latest
        permissions:
            actions: write
        steps:
        - uses: actions/setup-python@main
          with:
              python-version: 3.x
        - run: |
              pip install aiohttp
              curl https://bitbucket.org/chaowenguo/common/raw/main/clean.py | python - ${{secrets.GITHUB_TOKEN}}
